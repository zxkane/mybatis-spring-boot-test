buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven {
            url 'http://repos.zeroturnaround.com/nexus/content/groups/zt-public/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.springframework:springloaded:1.2.6.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'

springBoot {
    mainClass = 'com.cn.zbb.MybatisSpringBootApp'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

jar {
    baseName = 'mybatis-spring-boot-test'
    version = '1.0.0'

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

// Uses JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

// 1. Get dependencies from Maven local repository
// 2. Get dependencies from Maven central repository
repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
}

sourceSets {
    integTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
    }
}

task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

task integration(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web",
            'com.h2database:h2',
            'com.github.pagehelper:pagehelper:4.1.6',
            "io.springfox:springfox-swagger-ui:2.6.0",
            "io.springfox:springfox-swagger2:2.2.2",
            "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1"

    testCompile "org.springframework.boot:spring-boot-starter-test",
            "junit:junit:4.12",
            'com.jayway.jsonpath:json-path:2.2.0',
            'com.jayway.jsonpath:json-path-assert:2.2.0'


    integTestCompile sourceSets.main.output
    integTestCompile configurations.testCompile
    integTestCompile sourceSets.test.output
    integTestRuntime configurations.testRuntime

}

check.dependsOn integTest

test {
    // set heap size for the test JVM(s)
    maxHeapSize = "1024m"
    maxParallelForks = 1
    ignoreFailures true

    testLogging {
        // Show that tests are run in the command-line output
        events "started", "passed", "skipped", "failed"
    }

}

integTest {
    // set heap size for the test JVM(s)
    maxHeapSize = "1024m"
    maxParallelForks = 1
    ignoreFailures true

    // uncomment below line for debug propose if necessary
    //jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=6006'
    testLogging {
        // Show that tests are run in the command-line output
        events "started", "passed", "skipped", "failed"
    }
}
